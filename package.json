{
  "name": "@dipseth/dataproc-mcp-server",
  "version": "4.0.0",
  "description": "A production-ready Model Context Protocol (MCP) server for Google Cloud Dataproc operations. Provides intelligent defaults, comprehensive tooling, and seamless integration with Roo (VS Code) for big data workflows.",
  "type": "module",
  "keywords": "[\"mcp\", \"dataproc\", \"google-cloud\", \"model-context-protocol\", \"typescript\", \"nodejs\"]",
  "author": {
    "name": "dipseth",
    "url": "https://github.com/dipseth"
  },
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/dipseth/dataproc-mcp.git"
  },
  "homepage": "https://dipseth.github.io/dataproc-mcp/",
  "bugs": {
    "url": "https://github.com/dipseth/dataproc-mcp/issues"
  },
  "engines": {
    "node": ">=18.0.0"
  },
  "bin": {
    "dataproc-server": "./build/index.js",
    "dataproc-mcp": "./build/index.js"
  },
  "main": "build/index.js",
  "types": "build/index.d.ts",
  "publishConfig": {
    "access": "public",
    "registry": "https://registry.npmjs.org/"
  },
  "files": [
    "build",
    "profiles",
    "config",
    "docs",
    "templates",
    "scripts",
    "README.md",
    "CHANGELOG.md",
    "LICENSE"
  ],
  "scripts": {
    "build": "tsc && node -e \"import('fs').then(fs => fs.chmodSync('build/index.js', '755'))\"",
    "prepare": "npm run build",
    "watch": "tsc --watch",
    "start": "node build/index.js",
    "stop": "node scripts/stop-server.js",
    "restart": "npm run stop && npm run start",
    "setup": "node scripts/setup.js",
    "validate": "node scripts/validate-config.js",
    "validate:examples": "node scripts/validate-examples.js",
    "docs:generate": "node scripts/generate-docs.js",
    "docs:update": "node scripts/update-docs.js",
    "docs:test-links": "node scripts/test-doc-links.js",
    "inspector": "npx @modelcontextprotocol/inspector build/index.js",
    "test": "npm run test:all:organized",
    "test:unit": "npm run test:unit:fast",
    "test:unit:fast": "mocha 'tests/unit/**/*.js' --exit",
    "test:manual": "NODE_OPTIONS='--loader ts-node/esm' mocha 'tests/manual/**/*.ts' --timeout 60000 --exit",
    "test:integration": "npm run test:templating:integration && npm run test:qdrant:integration && npm run test:knowledge:integration",
    "test:auth": "node tests/manual/auth-methods.test.ts",
    "test:e2e": "npm run test:system:e2e",
    "test:performance": "npm run test:templating:performance && npm run test:knowledge:performance",
    "test:real-agent": "scripts/test-real-agent-usage.sh",
    "test:query-results": "node tests/manual/run-query-results-tests.ts",
    "test:query-results:basic": "TEST_SUITE=basic node tests/manual/run-query-results-tests.ts",
    "test:query-results:comprehensive": "TEST_SUITE=comprehensive node tests/manual/run-query-results-tests.ts",
    "test:query-results:scenarios": "TEST_SUITE=scenarios node tests/manual/run-query-results-tests.ts",
    "test:response-optimization": "npx tsx tests/manual/test-response-optimization.ts",
    "test:mcp": "npm run test:mcp:resources && npm run test:mcp:integration",
    "test:mcp:resources": "NODE_OPTIONS='--loader ts-node/esm' mocha 'tests/manual/test-mcp-resources.ts' --timeout 30000 --exit",
    "test:mcp:integration": "node tests/manual/test-mcp-resources-simple.ts",
    "test:mcp:server": "bash tests/manual/test-mcp-server.sh",
    "test:knowledge": "npm run test:knowledge:unit && npm run test:knowledge:integration",
    "test:semantic": "npx tsx tests/manual/test-response-optimization.ts",
    "test:templating": "npm run test:templating:unit && npm run test:templating:integration",
    "test:templating:unit": "NODE_OPTIONS='--loader ts-node/esm' mocha 'tests/templating/unit/**/*.ts' --timeout 30000 --exit",
    "test:templating:integration": "NODE_OPTIONS='--loader ts-node/esm' mocha 'tests/templating/integration/**/*.{ts,js}' --timeout 60000 --exit",
    "test:templating:performance": "NODE_OPTIONS='--loader ts-node/esm' mocha 'tests/templating/performance/**/*.js' --timeout 120000 --exit",
    "test:qdrant": "npm run test:qdrant:unit && npm run test:qdrant:integration",
    "test:qdrant:unit": "NODE_OPTIONS='--loader ts-node/esm' mocha 'tests/qdrant/unit/**/*.ts' --timeout 30000 --exit",
    "test:qdrant:integration": "NODE_OPTIONS='--loader ts-node/esm' mocha 'tests/qdrant/integration/**/*.{ts,js}' --timeout 60000 --exit",
    "test:knowledge:unit": "NODE_OPTIONS='--loader ts-node/esm' mocha 'tests/knowledge/unit/**/*.ts' --timeout 30000 --exit",
    "test:knowledge:integration": "NODE_OPTIONS='--loader ts-node/esm' mocha 'tests/knowledge/integration/**/*.{ts,js}' --timeout 60000 --exit",
    "test:knowledge:performance": "NODE_OPTIONS='--loader ts-node/esm' mocha 'tests/knowledge/performance/**/*.ts' --timeout 120000 --exit",
    "test:system": "npm run test:system:validation && npm run test:system:e2e && npm run test:system:benchmark",
    "test:system:validation": "NODE_OPTIONS='--loader ts-node/esm' mocha 'tests/system/validation.test.ts' --timeout 30000 --exit",
    "test:system:e2e": "NODE_OPTIONS='--loader ts-node/esm' mocha 'tests/system/e2e-workflow.test.ts' --timeout 60000 --exit",
    "test:system:benchmark": "NODE_OPTIONS='--loader ts-node/esm' mocha 'tests/system/benchmark.test.ts' --timeout 120000 --exit",
    "test:system:real-agent": "NODE_OPTIONS='--loader ts-node/esm' mocha 'tests/system/real-agent-usage.test.ts' --timeout 60000 --exit",
    "test:integration:full": "npm run test:auth && npm run test:system:e2e && npm run test:mcp && npm run test:query-results",
    "test:integration:quick": "npm run test:mcp:integration",
    "test:all:organized": "npm run test:templating && npm run test:qdrant && npm run test:knowledge && npm run test:system",
    "test:setup": "npm run build && npm run test:cleanup",
    "test:cleanup": "rm -f test-*.log && rm -f *.test.json",
    "test:all": "npm run test:setup && npm run test:unit && npm run test:all:organized",
    "test:benchmark": "npm run test:templating:performance && npm run test:knowledge:performance && npm run test:system:benchmark",
    "test:coverage": "nyc npm test",
    "test:coverage:check": "nyc check-coverage --lines 90 --functions 90 --branches 90 --statements 90",
    "test:watch": "mocha --require ts-node/register 'tests/**/*.ts' --watch",
    "lint": "npx eslint src/**/*.ts",
    "lint:check": "npx eslint src/**/*.ts",
    "lint:fix": "npx eslint src/**/*.ts --fix",
    "format": "npx prettier --write \"src/**/*.{ts,js,json}\"",
    "format:check": "npx prettier --check \"src/**/*.{ts,js,json}\"",
    "type-check": "tsc --noEmit",
    "security:audit": "npm audit",
    "security:check": "npm audit --audit-level moderate",
    "postinstall": "node scripts/postinstall.js",
    "prepublishOnly": "npm run build && npm run test && npm run lint:check && npm run type-check && npm run validate-package",
    "prepare-release": "node scripts/prepare-release.js",
    "release": "semantic-release",
    "release:dry": "semantic-release --dry-run",
    "release:beta": "semantic-release --branches develop",
    "version:patch": "npm version patch --no-git-tag-version",
    "version:minor": "npm version minor --no-git-tag-version",
    "version:major": "npm version major --no-git-tag-version",
    "publish:dry-run": "npm publish --dry-run",
    "publish:beta": "npm publish --tag beta",
    "publish:latest": "npm publish --tag latest",
    "validate-package": "npm pack --dry-run && npm audit --audit-level moderate",
    "build:clean": "npm run clean && npm run build",
    "build:standalone": "npm run build && node scripts/build-standalone.js",
    "build:docs": "npm run docs:api && npm run docs:build",
    "build:templates": "node scripts/build-templates.js",
    "docs:api": "typedoc --out docs/api src/index.ts --theme default --readme README.md --exclude '**/*.test.ts' --exclude '**/node_modules/**'",
    "docs:build": "bundle exec jekyll build --source docs --destination docs/_site",
    "docs:serve": "bundle exec jekyll serve --source docs --destination docs/_site --port 4000",
    "docs:clean": "rm -rf docs/_site",
    "changelog:extract": "node scripts/extract-changelog.js",
    "clean": "rm -rf build",
    "pre-flight": "node scripts/pre-flight-check.js",
    "ci-cd:validate": "npm run pre-flight && npm run prepare-release",
    "pre-push": "npm run build && npm run lint:check && npm run format:check && npm run type-check && npm run test:unit:fast && npm run test:system:validation && npm run security:check && npm run validate-package && npm run docs:test-links && echo 'ðŸŽ‰ All checks passed! Ready to push (templating and knowledge integration tests temporarily disabled due to mutex lock issue).'",
    "pre-push-full": "npm run build && npm run lint:check && npm run format:check && npm run type-check && npm run test:unit:fast && npm run test:templating && npm run test:knowledge && npm run test:system:validation && npm run security:check && npm run validate-package && npm run docs:test-links && echo 'ðŸŽ‰ All checks passed! Ready to push.'"
  },
  "dependencies": {
    "@google-cloud/dataproc": "^6.0.1",
    "@google-cloud/iam-credentials": "^4.0.1",
    "@google-cloud/storage": "^7.16.0",
    "@huggingface/transformers": "^3.5.2",
    "@modelcontextprotocol/sdk": "^0.6.1",
    "@qdrant/js-client-rest": "^1.8.0",
    "@types/uri-templates": "^0.1.34",
    "google-auth-library": "^9.14.2",
    "js-yaml": "^4.1.0",
    "node-fetch": "^3.3.2",
    "table": "^6.9.0",
    "uri-templates": "^0.2.0",
    "zod": "^3.22.5"
  },
  "devDependencies": {
    "@eslint/js": "^9.27.0",
    "@jest/globals": "^29.7.0",
    "@semantic-release/changelog": "^6.0.3",
    "@semantic-release/git": "^10.0.1",
    "@semantic-release/github": "^9.2.6",
    "@semantic-release/npm": "^11.0.3",
    "@types/chai": "^5.2.2",
    "@types/jest": "^29.5.14",
    "@types/js-yaml": "^4.0.9",
    "@types/long": "^5.0.0",
    "@types/mocha": "^10.0.10",
    "@types/node": "^20.17.57",
    "@typescript-eslint/eslint-plugin": "^6.21.0",
    "@typescript-eslint/parser": "^6.21.0",
    "chai": "^5.2.0",
    "codecov": "^3.8.3",
    "conventional-changelog-conventionalcommits": "^7.0.2",
    "eslint": "^8.0.1",
    "eslint-config-prettier": "^9.0.0",
    "eslint-plugin-prettier": "^5.0.1",
    "jest": "^29.7.0",
    "mocha": "^11.2.2",
    "nyc": "^15.1.0",
    "prettier": "^3.0.3",
    "semantic-release": "^22.0.12",
    "ts-jest": "^29.1.5",
    "ts-node": "^10.9.2",
    "typedoc": "^0.25.13",
    "typescript": "^5.3.3"
  }
}
